name: WIP-AutomatedTests
# An attempt to combine our 3 existing testing workflows into one.

on:
# Commenting out the on-push for now; this workflow is still WIP
#  push:
#    paths-ignore:
#      - 'docs/**'
#      - '.github/**'
#      - 'README.md'
    # Only trigger on branches, not on tags
#    branches: 'main'
  # Allow manual run of this workflow from the Actions tab
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    # Basic setup for all tests
    - name: Checkout the code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
            python-version: '3.11'
            cache: 'pip' # Caching pip stuff
    - name: Install Swirl
      run: ./install.sh
    
    # Unit Tests
    - name: Install Swirl Unit Tests
      run: ./install-test.sh
    - name: Run Unit Tests
      run: pytest
    
    # Setup Swirl for Smoke and Integration testing
    - name: Update apt
      run: sudo apt -o Acquire::Retries=3 update
    - name: Upgrade Ubuntu to latest patches
      run: sudo apt upgrade -y
    - name: Stop update-notifier which restarts datetime # Only in Integration API tests, do we still need it?
      run: sudo systemctl stop update-notifier-download.timer
    - name: Disable update-notifier which restarts datetime # Only in Integration API tests, do we still need it?
      run: sudo systemctl disable update-notifier-download.timer 
    - name: Install redis-server
      run: sudo apt install -y redis-server
    - name: Setup Swirl
      run: python swirl.py setup
    - name: Start Swirl
      run: python swirl.py start
    
    # Smoke Tests
    - name: Run Smoke Tests
      run: docker run --net=host -t swirlai/swirl-testing:latest-smoke-test sh -c "behave **/docker_container/*.feature --tags=docker_api_smoke"
    
    # Integration API Tests
    - name: Run Integrated API Tests
      run: docker run --net=host -t swirlai/swirl-testing:latest-integrated-api sh -c "behave --tags=integrated_api"
    
    # Persist branch info for subsequent workflows
    - name: Create artifacts directory
      run: mkdir -p artifacts
    - name: Set branch name
      id: extract_branch
      run: |
        BRANCH_NAME=$(echo $GITHUB_REF | cut -d "/" -f 3)
        echo "branch=$BRANCH_NAME" >> $GITHUB_ENV
    - name: Write branch and run_id to file
      run: |
        echo "${{ env.branch }}" > ./artifacts/branch.txt
        echo "${{ github.run_id }}" > ./artifacts/run_id.txt
    - name: Upload branch and run_id files as artifact
      uses: actions/upload-artifact@v3
      with:
        name: branch-info-${{ github.run_id }}
        path: |
          ./artifacts/branch.txt
          ./artifacts/run_id.txt
    
    # Upload log files of the workflow run
    - name: Upload log files
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: log-files
        path: |
          logs/
          /var/log/syslog*
